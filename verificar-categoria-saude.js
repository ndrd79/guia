require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

console.log('üîç Verificando empresas na categoria Sa√∫de...');

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Configura√ß√£o do Supabase incompleta');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function verificarCategoriaSaude() {
  try {
    console.log('üìä Buscando empresas da categoria Sa√∫de...');
    
    const { data: empresas, error } = await supabase
      .from('empresas')
      .select('id, nome, categoria, descricao, endereco')
      .eq('categoria', 'Sa√∫de')
      .order('nome');

    if (error) {
      console.error('‚ùå Erro ao buscar empresas:', error);
      return;
    }

    console.log(`\nüìà Encontradas ${empresas.length} empresas na categoria Sa√∫de:\n`);
    
    empresas.forEach((empresa, index) => {
      console.log(`${index + 1}. ${empresa.nome}`);
      console.log(`   Descri√ß√£o: ${empresa.descricao || 'N/A'}`);
      console.log(`   Endere√ßo: ${empresa.endereco || 'N/A'}`);
      console.log('');
    });

    // Verificar se h√° empresas que n√£o deveriam estar na categoria Sa√∫de
    console.log('üîç Analisando se as empresas est√£o na categoria correta...\n');
    
    const problemas = [];
    
    empresas.forEach(empresa => {
      const nomeCompleto = `${empresa.nome} ${empresa.descricao || ''}`.toLowerCase();
      
      // Palavras que indicam que N√ÉO deveria estar em Sa√∫de
      const palavrasProblematicas = [
        'padaria', 'panificadora', 'confeitaria', 'p√£o', 'doce',
        'academia', 'fitness', 'gin√°sio', 'muscula√ß√£o', 'crossfit',
        'tecnologia', 'inform√°tica', 'software', 'computador', 'sistema',
        'restaurante', 'lanchonete', 'pizzaria', 'hamburgueria',
        'loja', 'roupa', 'vestu√°rio', 'cal√ßado', 'sapato',
        'oficina', 'mec√¢nica', 'auto', 'carro', 've√≠culo'
      ];
      
      const palavraEncontrada = palavrasProblematicas.find(palavra => 
        nomeCompleto.includes(palavra)
      );
      
      if (palavraEncontrada) {
        problemas.push({
          empresa,
          palavraProblematica: palavraEncontrada
        });
      }
    });

    if (problemas.length > 0) {
      console.log(`‚ö†Ô∏è  PROBLEMAS ENCONTRADOS (${problemas.length} empresas):\n`);
      
      problemas.forEach((problema, index) => {
        console.log(`${index + 1}. ‚ùå ${problema.empresa.nome}`);
        console.log(`   Palavra problem√°tica: "${problema.palavraProblematica}"`);
        console.log(`   Descri√ß√£o: ${problema.empresa.descricao || 'N/A'}`);
        console.log(`   ‚Üí Esta empresa provavelmente N√ÉO deveria estar na categoria Sa√∫de\n`);
      });
    } else {
      console.log('‚úÖ Todas as empresas parecem estar corretamente categorizadas em Sa√∫de');
    }

  } catch (error) {
    console.error('‚ùå Erro:', error);
  }
}

verificarCategoriaSaude();